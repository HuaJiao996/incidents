// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 设置seed脚本
generator seed {
  provider = "prisma-client-js"
  seed     = "../prisma/seed.ts"
}

enum UserRole {
  ADMIN
  MEMBER
}

enum IncidentStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
}

enum IncidentSeverity {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum CustomFieldType {
  STRING
  NUMBER
  BOOLEAN
  ENUM
  DATE
  ARRAY
}

//#region 用户配置

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  teams     Team[]
  role      UserRole @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Team {
  id        Int      @id @default(autoincrement())
  name      String
  members   User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("teams")
}

model Service {
  id            String                  @id @default(nanoid())
  name          String               @unique
  description   String?
  routes        ServiceRoute[]
  customFields  ServiceCustomField[]
  incidents     Incident[]
  incidentTypes IncidentType[]
  alerts        Alert[]
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt

  @@map("services")
}

model ServiceRoute {
  id          Int      @id @default(autoincrement())
  serviceId   String
  service     Service  @relation(fields: [serviceId], references: [id])
  order       Int
  condition   String   @default("")
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("service_routes")
}

model ServiceCustomField {
  id         Int             @id @default(autoincrement())
  serviceId  String
  service    Service         @relation(fields: [serviceId], references: [id])
  path       String
  type       CustomFieldType
  required   Boolean         @default(false)
  enumValues Json            @default("[]")
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@map("service_custom_fields")
}

model IncidentType {
  id                Int                             @id @default(autoincrement())
  name              String
  serviceId         String
  service           Service                         @relation(fields: [serviceId], references: [id])
  title             String // 使用模板表达式  context中包含alert 例：这是一个#{alert.title}
  description       String // 使用模板表达式  context中包含alert 例：这是一个#{alert.description}
  condition         String // 匹配时创建Incident，使用Jexl表达式 context中包含alert
  groupCondition    String? // 根据这个条件先查找是否有为resolve的Incident，如果有则不创建 并将alert关联到对应的Incident 使用Jexl表达式 context中包含当前alert和incident
  severityConditions IncidentTypeSeverityCondition[]
  priority          Int                             @default(0)
  incidents         Incident[]
  createdAt         DateTime                        @default(now())
  updatedAt         DateTime                        @updatedAt

  @@map("incident_types")
}

model IncidentTypeSeverityCondition {
  id             Int              @id @default(autoincrement())
  severity       IncidentSeverity
  incidentTypeId Int
  incidentType   IncidentType     @relation(fields: [incidentTypeId], references: [id])
  condition      String // 使用Jexl表达式
  order          Int

  @@map("incident_type_severity_conditions")
}

model GlobalCustomField {
  id         Int             @id @default(autoincrement())
  path       String
  type       CustomFieldType
  required   Boolean         @default(false)
  enumValues Json?           @default("[]")
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@map("global_custom_fields")
}

//#endregion

model Alert {
  id           Int       @id @default(autoincrement())
  title        String
  content      String
  customFields Json?     @default("{}")
  serviceId    String
  service      Service   @relation(fields: [serviceId], references: [id])
  incidentId   Int?
  incident     Incident? @relation(fields: [incidentId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("alerts")
}

model Incident {
  id          Int              @id @default(autoincrement())
  title       String
  description String?
  status      IncidentStatus   @default(OPEN)
  severity    IncidentSeverity
  serviceId   String
  service     Service          @relation(fields: [serviceId], references: [id])
  typeId      Int?
  type        IncidentType?    @relation(fields: [typeId], references: [id])
  alerts      Alert[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  @@map("incidents")
}
