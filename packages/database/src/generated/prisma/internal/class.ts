
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * WARNING: This is an internal file that is subject to change!
 *
 * 🛑 Under no circumstances should you import this file directly! 🛑
 *
 * Please import the `PrismaClient` class from the `client.ts` file instead.
 */

import * as runtime from "@prisma/client/runtime/client"
import type * as Prisma from "./prismaNamespace.ts"


const config: runtime.GetPrismaClientConfig = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client"
    },
    "output": {
      "value": "C:\\workspace\\incidents\\packages\\database\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "client"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters",
      "queryCompiler"
    ],
    "sourceFilePath": "C:\\workspace\\incidents\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativePath": "../../../../../prisma",
  "clientVersion": "6.14.0",
  "engineVersion": "717184b7b35ea05dfa71a3236b7af656013e1e49",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider        = \"prisma-client\"\n  previewFeatures = [\"driverAdapters\", \"queryCompiler\"]\n  output          = \"../packages/database/src/generated/prisma\"\n}\n\ngenerator prismabox {\n  provider                    = \"prismabox\"\n  typeboxImportDependencyName = \"elysia\"\n  typeboxImportVariableName   = \"t\"\n  inputModel                  = true\n  output                      = \"../packages/database/src/generated/prismabox\"\n}\n\nenum IncidentStatus {\n  OPEN\n  ACKNOWLEDGED\n  RESOLVED\n}\n\nenum IncidentSeverity {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\nenum CustomFieldType {\n  STRING\n  NUMBER\n  BOOLEAN\n  ENUM\n  DATE\n  ARRAY\n}\n\nmodel Service {\n  id            String               @id @default(nanoid())\n  name          String               @unique\n  description   String?\n  routes        ServiceRoute[]\n  customFields  ServiceCustomField[]\n  incidents     Incident[]\n  incidentTypes IncidentType[]\n  alerts        Alert[]\n  createdAt     DateTime             @default(now())\n  updatedAt     DateTime             @updatedAt\n  createdById   String\n  updatedById   String\n  createdBy     User                 @relation(\"ServiceCreatedBy\", fields: [createdById], references: [id])\n  updatedBy     User                 @relation(\"ServiceUpdatedBy\", fields: [updatedById], references: [id])\n\n  @@map(\"service\")\n}\n\nmodel ServiceRoute {\n  id          Int      @id @default(autoincrement())\n  serviceId   String\n  service     Service  @relation(fields: [serviceId], references: [id])\n  order       Int\n  condition   String   @default(\"\")\n  description String\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  createdById String\n  updatedById String\n  createdBy   User     @relation(\"ServiceRouteCreatedBy\", fields: [createdById], references: [id], onDelete: Cascade)\n  updatedBy   User     @relation(\"ServiceRouteUpdatedBy\", fields: [updatedById], references: [id])\n\n  @@map(\"service_route\")\n}\n\nmodel ServiceCustomField {\n  id          Int             @id @default(autoincrement())\n  serviceId   String\n  service     Service         @relation(fields: [serviceId], references: [id])\n  path        String\n  type        CustomFieldType\n  required    Boolean         @default(false)\n  enumValues  Json            @default(\"[]\")\n  createdAt   DateTime        @default(now())\n  updatedAt   DateTime        @updatedAt\n  createdById String\n  updatedById String\n\n  @@map(\"service_custom_field\")\n}\n\nmodel IncidentType {\n  id                 Int                             @id @default(autoincrement())\n  name               String\n  serviceId          String\n  service            Service                         @relation(fields: [serviceId], references: [id])\n  title              String // 使用模板表达式  context中包含alert 例：这是一个#{alert.title}\n  description        String // 使用模板表达式  context中包含alert 例：这是一个#{alert.description}\n  condition          String // 匹配时创建Incident，使用Jexl表达式 context中包含alert\n  groupCondition     String? // 根据这个条件先查找是否有为resolve的Incident，如果有则不创建 并将alert关联到对应的Incident 使用Jexl表达式 context中包含当前alert和incident\n  severityConditions IncidentTypeSeverityCondition[]\n  priority           Int                             @default(0)\n  incidents          Incident[]\n  createdAt          DateTime                        @default(now())\n  updatedAt          DateTime                        @updatedAt\n  createdById        String\n  updatedById        String\n  createdBy          User                            @relation(\"IncidentTypeCreatedBy\", fields: [createdById], references: [id])\n  updatedBy          User                            @relation(\"IncidentTypeUpdatedBy\", fields: [updatedById], references: [id])\n\n  @@map(\"incident_type\")\n}\n\nmodel IncidentTypeSeverityCondition {\n  id             Int              @id @default(autoincrement())\n  severity       IncidentSeverity\n  incidentTypeId Int\n  incidentType   IncidentType     @relation(fields: [incidentTypeId], references: [id])\n  condition      String // 使用Jexl表达式\n  order          Int\n\n  @@map(\"incident_type_severity_condition\")\n}\n\nmodel GlobalCustomField {\n  id          Int             @id @default(autoincrement())\n  path        String\n  type        CustomFieldType\n  required    Boolean         @default(false)\n  enumValues  Json?           @default(\"[]\")\n  createdAt   DateTime        @default(now())\n  updatedAt   DateTime        @updatedAt\n  createdById String\n  updatedById String\n  createdBy   User            @relation(\"GlobalCustomFieldCreatedBy\", fields: [createdById], references: [id])\n  updatedBy   User            @relation(\"GlobalCustomFieldUpdatedBy\", fields: [updatedById], references: [id])\n\n  @@map(\"global_custom_field\")\n}\n\nmodel Alert {\n  id           Int       @id @default(autoincrement())\n  title        String\n  content      String\n  customFields Json?     @default(\"{}\")\n  serviceId    String\n  service      Service   @relation(fields: [serviceId], references: [id])\n  incidentId   Int?\n  incident     Incident? @relation(fields: [incidentId], references: [id])\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n  createdById  String\n  createdBy    Apikey    @relation(\"ApikeyCreatedAlerts\", fields: [createdById], references: [id])\n\n  @@map(\"alert\")\n}\n\nmodel Incident {\n  id          Int              @id @default(autoincrement())\n  title       String\n  description String?\n  status      IncidentStatus   @default(OPEN)\n  severity    IncidentSeverity\n  serviceId   String\n  service     Service          @relation(fields: [serviceId], references: [id])\n  typeId      Int?\n  type        IncidentType?    @relation(fields: [typeId], references: [id])\n  alerts      Alert[]\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n  createdById String\n  createdBy   Apikey           @relation(\"ApikeyCreatedIncidents\", fields: [createdById], references: [id])\n  updatedById String\n  updatedBy   Apikey           @relation(\"ApikeyUpdatedIncidents\", fields: [updatedById], references: [id])\n\n  @@map(\"incident\")\n}\n\nmodel Session {\n  id        String   @id\n  expiresAt DateTime\n  token     String\n  createdAt DateTime\n  updatedAt DateTime\n  ipAddress String?\n  userAgent String?\n  userId    String\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  impersonatedBy String?\n\n  @@unique([token])\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime\n  updatedAt             DateTime\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String    @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime?\n  updatedAt  DateTime?\n\n  @@map(\"verification\")\n}\n\nmodel User {\n  id            String    @id\n  name          String\n  email         String\n  emailVerified Boolean\n  image         String?\n  createdAt     DateTime\n  updatedAt     DateTime\n  sessions      Session[]\n  accounts      Account[]\n\n  apikeys Apikey[]\n\n  // Service relations\n  createdServices           Service[]           @relation(\"ServiceCreatedBy\")\n  updatedServices           Service[]           @relation(\"ServiceUpdatedBy\")\n  // ServiceRoute relations\n  createdServiceRoutes      ServiceRoute[]      @relation(\"ServiceRouteCreatedBy\")\n  updatedServiceRoutes      ServiceRoute[]      @relation(\"ServiceRouteUpdatedBy\")\n  // GlobalCustomField relations\n  createdGlobalCustomFields GlobalCustomField[] @relation(\"GlobalCustomFieldCreatedBy\")\n  updatedGlobalCustomFields GlobalCustomField[] @relation(\"GlobalCustomFieldUpdatedBy\")\n  // IncidentType relations\n  createdIncidentTypes      IncidentType[]      @relation(\"IncidentTypeCreatedBy\")\n  updatedIncidentTypes      IncidentType[]      @relation(\"IncidentTypeUpdatedBy\")\n  // Apikey relations\n  createdApikeys            Apikey[]            @relation(\"ApikeyCreatedBy\")\n  updatedApikeys            Apikey[]            @relation(\"ApikeyUpdatedBy\")\n\n  role       String?\n  banned     Boolean?\n  banReason  String?\n  banExpires DateTime?\n\n  @@unique([email])\n  @@map(\"user\")\n}\n\nmodel Apikey {\n  id                  String    @id\n  name                String?\n  start               String?\n  prefix              String?\n  key                 String\n  userId              String\n  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  refillInterval      Int?\n  refillAmount        Int?\n  lastRefillAt        DateTime?\n  enabled             Boolean?\n  rateLimitEnabled    Boolean?\n  rateLimitTimeWindow Int?\n  rateLimitMax        Int?\n  requestCount        Int?\n  remaining           Int?\n  lastRequest         DateTime?\n  expiresAt           DateTime?\n  createdAt           DateTime\n  updatedAt           DateTime\n  permissions         String?\n  metadata            String?\n\n  createdAlerts    Alert[]    @relation(\"ApikeyCreatedAlerts\")\n  createdIncidents Incident[] @relation(\"ApikeyCreatedIncidents\")\n  updatedIncidents Incident[] @relation(\"ApikeyUpdatedIncidents\")\n\n  createdById String\n  createdBy   User   @relation(\"ApikeyCreatedBy\", fields: [createdById], references: [id])\n  updatedById String\n  updatedBy   User   @relation(\"ApikeyUpdatedBy\", fields: [updatedById], references: [id])\n\n  @@map(\"apikey\")\n}\n",
  "inlineSchemaHash": "0ba6757d8fa85aa1e4248e0c85a7bec48fcc8d821025bc0ffd768d3432020e03",
  "copyEngine": true,
  "runtimeDataModel": {
    "models": {},
    "enums": {},
    "types": {}
  },
  "dirname": ""
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"Service\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"routes\",\"kind\":\"object\",\"type\":\"ServiceRoute\",\"relationName\":\"ServiceToServiceRoute\"},{\"name\":\"customFields\",\"kind\":\"object\",\"type\":\"ServiceCustomField\",\"relationName\":\"ServiceToServiceCustomField\"},{\"name\":\"incidents\",\"kind\":\"object\",\"type\":\"Incident\",\"relationName\":\"IncidentToService\"},{\"name\":\"incidentTypes\",\"kind\":\"object\",\"type\":\"IncidentType\",\"relationName\":\"IncidentTypeToService\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"Alert\",\"relationName\":\"AlertToService\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceCreatedBy\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceUpdatedBy\"}],\"dbName\":\"service\"},\"ServiceRoute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceToServiceRoute\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceRouteCreatedBy\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceRouteUpdatedBy\"}],\"dbName\":\"service_route\"},\"ServiceCustomField\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceToServiceCustomField\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CustomFieldType\"},{\"name\":\"required\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enumValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"service_custom_field\"},\"IncidentType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"IncidentTypeToService\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupCondition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severityConditions\",\"kind\":\"object\",\"type\":\"IncidentTypeSeverityCondition\",\"relationName\":\"IncidentTypeToIncidentTypeSeverityCondition\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"incidents\",\"kind\":\"object\",\"type\":\"Incident\",\"relationName\":\"IncidentToIncidentType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IncidentTypeCreatedBy\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IncidentTypeUpdatedBy\"}],\"dbName\":\"incident_type\"},\"IncidentTypeSeverityCondition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"IncidentSeverity\"},{\"name\":\"incidentTypeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"incidentType\",\"kind\":\"object\",\"type\":\"IncidentType\",\"relationName\":\"IncidentTypeToIncidentTypeSeverityCondition\"},{\"name\":\"condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":\"incident_type_severity_condition\"},\"GlobalCustomField\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CustomFieldType\"},{\"name\":\"required\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enumValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GlobalCustomFieldCreatedBy\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GlobalCustomFieldUpdatedBy\"}],\"dbName\":\"global_custom_field\"},\"Alert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customFields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"AlertToService\"},{\"name\":\"incidentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"incident\",\"kind\":\"object\",\"type\":\"Incident\",\"relationName\":\"AlertToIncident\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"Apikey\",\"relationName\":\"ApikeyCreatedAlerts\"}],\"dbName\":\"alert\"},\"Incident\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IncidentStatus\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"IncidentSeverity\"},{\"name\":\"serviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"service\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"IncidentToService\"},{\"name\":\"typeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"object\",\"type\":\"IncidentType\",\"relationName\":\"IncidentToIncidentType\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"Alert\",\"relationName\":\"AlertToIncident\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"Apikey\",\"relationName\":\"ApikeyCreatedIncidents\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"Apikey\",\"relationName\":\"ApikeyUpdatedIncidents\"}],\"dbName\":\"incident\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"apikeys\",\"kind\":\"object\",\"type\":\"Apikey\",\"relationName\":\"ApikeyToUser\"},{\"name\":\"createdServices\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceCreatedBy\"},{\"name\":\"updatedServices\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"ServiceUpdatedBy\"},{\"name\":\"createdServiceRoutes\",\"kind\":\"object\",\"type\":\"ServiceRoute\",\"relationName\":\"ServiceRouteCreatedBy\"},{\"name\":\"updatedServiceRoutes\",\"kind\":\"object\",\"type\":\"ServiceRoute\",\"relationName\":\"ServiceRouteUpdatedBy\"},{\"name\":\"createdGlobalCustomFields\",\"kind\":\"object\",\"type\":\"GlobalCustomField\",\"relationName\":\"GlobalCustomFieldCreatedBy\"},{\"name\":\"updatedGlobalCustomFields\",\"kind\":\"object\",\"type\":\"GlobalCustomField\",\"relationName\":\"GlobalCustomFieldUpdatedBy\"},{\"name\":\"createdIncidentTypes\",\"kind\":\"object\",\"type\":\"IncidentType\",\"relationName\":\"IncidentTypeCreatedBy\"},{\"name\":\"updatedIncidentTypes\",\"kind\":\"object\",\"type\":\"IncidentType\",\"relationName\":\"IncidentTypeUpdatedBy\"},{\"name\":\"createdApikeys\",\"kind\":\"object\",\"type\":\"Apikey\",\"relationName\":\"ApikeyCreatedBy\"},{\"name\":\"updatedApikeys\",\"kind\":\"object\",\"type\":\"Apikey\",\"relationName\":\"ApikeyUpdatedBy\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user\"},\"Apikey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prefix\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApikeyToUser\"},{\"name\":\"refillInterval\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"refillAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastRefillAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rateLimitEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rateLimitTimeWindow\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rateLimitMax\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requestCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"remaining\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastRequest\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAlerts\",\"kind\":\"object\",\"type\":\"Alert\",\"relationName\":\"ApikeyCreatedAlerts\"},{\"name\":\"createdIncidents\",\"kind\":\"object\",\"type\":\"Incident\",\"relationName\":\"ApikeyCreatedIncidents\"},{\"name\":\"updatedIncidents\",\"kind\":\"object\",\"type\":\"Incident\",\"relationName\":\"ApikeyUpdatedIncidents\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApikeyCreatedBy\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApikeyUpdatedBy\"}],\"dbName\":\"apikey\"}},\"enums\":{},\"types\":{}}")
config.engineWasm = undefined

async function decodeBase64AsWasm(wasmBase64: string): Promise<WebAssembly.Module> {
  const { Buffer } = await import('node:buffer')
  const base64Data = wasmBase64.replace('data:application/wasm;base64,', '')
  const wasmArray = new Uint8Array(Buffer.from(base64Data, 'base64'))
  return new WebAssembly.Module(wasmArray)
}

config.compilerWasm = {
  getRuntime: async () => await import("@prisma/client/runtime/query_compiler_bg.postgresql.mjs"),

  getQueryCompilerWasmModule: async () => {
    const { wasm } = await import("@prisma/client/runtime/query_compiler_bg.postgresql.wasm-base64.mjs")
    return await decodeBase64AsWasm(wasm)
  }
}




export type LogOptions<ClientOptions extends Prisma.PrismaClientOptions> =
  'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never

export interface PrismaClientConstructor {
    /**
   * ## Prisma Client
   * 
   * Type-safe database client for TypeScript
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Services
   * const services = await prisma.service.findMany()
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  new <
    Options extends Prisma.PrismaClientOptions,
    LogOpts extends LogOptions<Options>,
    OmitOpts extends Prisma.PrismaClientOptions['omit'] = Options extends { omit: infer U } ? U : Prisma.PrismaClientOptions['omit'],
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
  >(options?: Prisma.Subset<Options, Prisma.PrismaClientOptions> ): PrismaClient<LogOpts, OmitOpts, ExtArgs>
}

/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Services
 * const services = await prisma.service.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */

export interface PrismaClient<
  in LogOpts extends Prisma.LogLevel = never,
  in out OmitOpts extends Prisma.PrismaClientOptions['omit'] = Prisma.PrismaClientOptions['omit'],
  in out ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

  $on<V extends LogOpts>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): runtime.Types.Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): runtime.Types.Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => runtime.Types.Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): runtime.Types.Utils.JsPromise<R>


  $extends: runtime.Types.Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<OmitOpts>, ExtArgs, runtime.Types.Utils.Call<Prisma.TypeMapCb<OmitOpts>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.service`: Exposes CRUD operations for the **Service** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services
    * const services = await prisma.service.findMany()
    * ```
    */
  get service(): Prisma.ServiceDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.serviceRoute`: Exposes CRUD operations for the **ServiceRoute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceRoutes
    * const serviceRoutes = await prisma.serviceRoute.findMany()
    * ```
    */
  get serviceRoute(): Prisma.ServiceRouteDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.serviceCustomField`: Exposes CRUD operations for the **ServiceCustomField** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ServiceCustomFields
    * const serviceCustomFields = await prisma.serviceCustomField.findMany()
    * ```
    */
  get serviceCustomField(): Prisma.ServiceCustomFieldDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.incidentType`: Exposes CRUD operations for the **IncidentType** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IncidentTypes
    * const incidentTypes = await prisma.incidentType.findMany()
    * ```
    */
  get incidentType(): Prisma.IncidentTypeDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.incidentTypeSeverityCondition`: Exposes CRUD operations for the **IncidentTypeSeverityCondition** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IncidentTypeSeverityConditions
    * const incidentTypeSeverityConditions = await prisma.incidentTypeSeverityCondition.findMany()
    * ```
    */
  get incidentTypeSeverityCondition(): Prisma.IncidentTypeSeverityConditionDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.globalCustomField`: Exposes CRUD operations for the **GlobalCustomField** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more GlobalCustomFields
    * const globalCustomFields = await prisma.globalCustomField.findMany()
    * ```
    */
  get globalCustomField(): Prisma.GlobalCustomFieldDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.alert`: Exposes CRUD operations for the **Alert** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alerts
    * const alerts = await prisma.alert.findMany()
    * ```
    */
  get alert(): Prisma.AlertDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.incident`: Exposes CRUD operations for the **Incident** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incidents
    * const incidents = await prisma.incident.findMany()
    * ```
    */
  get incident(): Prisma.IncidentDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.verification`: Exposes CRUD operations for the **Verification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Verifications
    * const verifications = await prisma.verification.findMany()
    * ```
    */
  get verification(): Prisma.VerificationDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, { omit: OmitOpts }>;

  /**
   * `prisma.apikey`: Exposes CRUD operations for the **Apikey** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Apikeys
    * const apikeys = await prisma.apikey.findMany()
    * ```
    */
  get apikey(): Prisma.ApikeyDelegate<ExtArgs, { omit: OmitOpts }>;
}

export function getPrismaClientClass(dirname: string): PrismaClientConstructor {
  config.dirname = dirname
  return runtime.getPrismaClient(config) as unknown as PrismaClientConstructor
}
