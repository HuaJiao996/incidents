
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Service` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Service
 * 
 */
export type ServiceModel = runtime.Types.Result.DefaultSelection<Prisma.$ServicePayload>

export type AggregateService = {
  _count: ServiceCountAggregateOutputType | null
  _min: ServiceMinAggregateOutputType | null
  _max: ServiceMaxAggregateOutputType | null
}

export type ServiceMinAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
  createdById: string | null
  updatedById: string | null
}

export type ServiceMaxAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  createdAt: Date | null
  updatedAt: Date | null
  createdById: string | null
  updatedById: string | null
}

export type ServiceCountAggregateOutputType = {
  id: number
  name: number
  description: number
  createdAt: number
  updatedAt: number
  createdById: number
  updatedById: number
  _all: number
}


export type ServiceMinAggregateInputType = {
  id?: true
  name?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  createdById?: true
  updatedById?: true
}

export type ServiceMaxAggregateInputType = {
  id?: true
  name?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  createdById?: true
  updatedById?: true
}

export type ServiceCountAggregateInputType = {
  id?: true
  name?: true
  description?: true
  createdAt?: true
  updatedAt?: true
  createdById?: true
  updatedById?: true
  _all?: true
}

export type ServiceAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Service to aggregate.
   */
  where?: Prisma.ServiceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Services to fetch.
   */
  orderBy?: Prisma.ServiceOrderByWithRelationInput | Prisma.ServiceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ServiceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Services from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Services.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Services
  **/
  _count?: true | ServiceCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ServiceMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ServiceMaxAggregateInputType
}

export type GetServiceAggregateType<T extends ServiceAggregateArgs> = {
      [P in keyof T & keyof AggregateService]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateService[P]>
    : Prisma.GetScalarType<T[P], AggregateService[P]>
}




export type ServiceGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ServiceWhereInput
  orderBy?: Prisma.ServiceOrderByWithAggregationInput | Prisma.ServiceOrderByWithAggregationInput[]
  by: Prisma.ServiceScalarFieldEnum[] | Prisma.ServiceScalarFieldEnum
  having?: Prisma.ServiceScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ServiceCountAggregateInputType | true
  _min?: ServiceMinAggregateInputType
  _max?: ServiceMaxAggregateInputType
}

export type ServiceGroupByOutputType = {
  id: string
  name: string
  description: string | null
  createdAt: Date
  updatedAt: Date
  createdById: string
  updatedById: string
  _count: ServiceCountAggregateOutputType | null
  _min: ServiceMinAggregateOutputType | null
  _max: ServiceMaxAggregateOutputType | null
}

type GetServiceGroupByPayload<T extends ServiceGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ServiceGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ServiceGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ServiceGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ServiceGroupByOutputType[P]>
      }
    >
  >



export type ServiceWhereInput = {
  AND?: Prisma.ServiceWhereInput | Prisma.ServiceWhereInput[]
  OR?: Prisma.ServiceWhereInput[]
  NOT?: Prisma.ServiceWhereInput | Prisma.ServiceWhereInput[]
  id?: Prisma.StringFilter<"Service"> | string
  name?: Prisma.StringFilter<"Service"> | string
  description?: Prisma.StringNullableFilter<"Service"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Service"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Service"> | Date | string
  createdById?: Prisma.StringFilter<"Service"> | string
  updatedById?: Prisma.StringFilter<"Service"> | string
  routes?: Prisma.ServiceRouteListRelationFilter
  customFields?: Prisma.ServiceCustomFieldListRelationFilter
  incidents?: Prisma.IncidentListRelationFilter
  incidentTypes?: Prisma.IncidentTypeListRelationFilter
  alerts?: Prisma.AlertListRelationFilter
  createdBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  updatedBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type ServiceOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  updatedById?: Prisma.SortOrder
  routes?: Prisma.ServiceRouteOrderByRelationAggregateInput
  customFields?: Prisma.ServiceCustomFieldOrderByRelationAggregateInput
  incidents?: Prisma.IncidentOrderByRelationAggregateInput
  incidentTypes?: Prisma.IncidentTypeOrderByRelationAggregateInput
  alerts?: Prisma.AlertOrderByRelationAggregateInput
  createdBy?: Prisma.UserOrderByWithRelationInput
  updatedBy?: Prisma.UserOrderByWithRelationInput
}

export type ServiceWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  name?: string
  AND?: Prisma.ServiceWhereInput | Prisma.ServiceWhereInput[]
  OR?: Prisma.ServiceWhereInput[]
  NOT?: Prisma.ServiceWhereInput | Prisma.ServiceWhereInput[]
  description?: Prisma.StringNullableFilter<"Service"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Service"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Service"> | Date | string
  createdById?: Prisma.StringFilter<"Service"> | string
  updatedById?: Prisma.StringFilter<"Service"> | string
  routes?: Prisma.ServiceRouteListRelationFilter
  customFields?: Prisma.ServiceCustomFieldListRelationFilter
  incidents?: Prisma.IncidentListRelationFilter
  incidentTypes?: Prisma.IncidentTypeListRelationFilter
  alerts?: Prisma.AlertListRelationFilter
  createdBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  updatedBy?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id" | "name">

export type ServiceOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  updatedById?: Prisma.SortOrder
  _count?: Prisma.ServiceCountOrderByAggregateInput
  _max?: Prisma.ServiceMaxOrderByAggregateInput
  _min?: Prisma.ServiceMinOrderByAggregateInput
}

export type ServiceScalarWhereWithAggregatesInput = {
  AND?: Prisma.ServiceScalarWhereWithAggregatesInput | Prisma.ServiceScalarWhereWithAggregatesInput[]
  OR?: Prisma.ServiceScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ServiceScalarWhereWithAggregatesInput | Prisma.ServiceScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Service"> | string
  name?: Prisma.StringWithAggregatesFilter<"Service"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Service"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Service"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Service"> | Date | string
  createdById?: Prisma.StringWithAggregatesFilter<"Service"> | string
  updatedById?: Prisma.StringWithAggregatesFilter<"Service"> | string
}

export type ServiceCreateInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  routes?: Prisma.ServiceRouteCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertCreateNestedManyWithoutServiceInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedServicesInput
  updatedBy: Prisma.UserCreateNestedOneWithoutUpdatedServicesInput
}

export type ServiceUncheckedCreateInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  updatedById: string
  routes?: Prisma.ServiceRouteUncheckedCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldUncheckedCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentUncheckedCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeUncheckedCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  routes?: Prisma.ServiceRouteUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUpdateManyWithoutServiceNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedServicesNestedInput
  updatedBy?: Prisma.UserUpdateOneRequiredWithoutUpdatedServicesNestedInput
}

export type ServiceUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
  routes?: Prisma.ServiceRouteUncheckedUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUncheckedUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUncheckedUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUncheckedUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceCreateManyInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  updatedById: string
}

export type ServiceUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ServiceUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ServiceCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  updatedById?: Prisma.SortOrder
}

export type ServiceMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  updatedById?: Prisma.SortOrder
}

export type ServiceMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  createdById?: Prisma.SortOrder
  updatedById?: Prisma.SortOrder
}

export type ServiceScalarRelationFilter = {
  is?: Prisma.ServiceWhereInput
  isNot?: Prisma.ServiceWhereInput
}

export type ServiceListRelationFilter = {
  every?: Prisma.ServiceWhereInput
  some?: Prisma.ServiceWhereInput
  none?: Prisma.ServiceWhereInput
}

export type ServiceOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type ServiceCreateNestedOneWithoutRoutesInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutRoutesInput, Prisma.ServiceUncheckedCreateWithoutRoutesInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutRoutesInput
  connect?: Prisma.ServiceWhereUniqueInput
}

export type ServiceUpdateOneRequiredWithoutRoutesNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutRoutesInput, Prisma.ServiceUncheckedCreateWithoutRoutesInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutRoutesInput
  upsert?: Prisma.ServiceUpsertWithoutRoutesInput
  connect?: Prisma.ServiceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceUpdateToOneWithWhereWithoutRoutesInput, Prisma.ServiceUpdateWithoutRoutesInput>, Prisma.ServiceUncheckedUpdateWithoutRoutesInput>
}

export type ServiceCreateNestedOneWithoutCustomFieldsInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutCustomFieldsInput, Prisma.ServiceUncheckedCreateWithoutCustomFieldsInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutCustomFieldsInput
  connect?: Prisma.ServiceWhereUniqueInput
}

export type ServiceUpdateOneRequiredWithoutCustomFieldsNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutCustomFieldsInput, Prisma.ServiceUncheckedCreateWithoutCustomFieldsInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutCustomFieldsInput
  upsert?: Prisma.ServiceUpsertWithoutCustomFieldsInput
  connect?: Prisma.ServiceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceUpdateToOneWithWhereWithoutCustomFieldsInput, Prisma.ServiceUpdateWithoutCustomFieldsInput>, Prisma.ServiceUncheckedUpdateWithoutCustomFieldsInput>
}

export type ServiceCreateNestedOneWithoutIncidentTypesInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentTypesInput, Prisma.ServiceUncheckedCreateWithoutIncidentTypesInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutIncidentTypesInput
  connect?: Prisma.ServiceWhereUniqueInput
}

export type ServiceUpdateOneRequiredWithoutIncidentTypesNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentTypesInput, Prisma.ServiceUncheckedCreateWithoutIncidentTypesInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutIncidentTypesInput
  upsert?: Prisma.ServiceUpsertWithoutIncidentTypesInput
  connect?: Prisma.ServiceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceUpdateToOneWithWhereWithoutIncidentTypesInput, Prisma.ServiceUpdateWithoutIncidentTypesInput>, Prisma.ServiceUncheckedUpdateWithoutIncidentTypesInput>
}

export type ServiceCreateNestedOneWithoutAlertsInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutAlertsInput, Prisma.ServiceUncheckedCreateWithoutAlertsInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutAlertsInput
  connect?: Prisma.ServiceWhereUniqueInput
}

export type ServiceUpdateOneRequiredWithoutAlertsNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutAlertsInput, Prisma.ServiceUncheckedCreateWithoutAlertsInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutAlertsInput
  upsert?: Prisma.ServiceUpsertWithoutAlertsInput
  connect?: Prisma.ServiceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceUpdateToOneWithWhereWithoutAlertsInput, Prisma.ServiceUpdateWithoutAlertsInput>, Prisma.ServiceUncheckedUpdateWithoutAlertsInput>
}

export type ServiceCreateNestedOneWithoutIncidentsInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentsInput, Prisma.ServiceUncheckedCreateWithoutIncidentsInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutIncidentsInput
  connect?: Prisma.ServiceWhereUniqueInput
}

export type ServiceUpdateOneRequiredWithoutIncidentsNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentsInput, Prisma.ServiceUncheckedCreateWithoutIncidentsInput>
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutIncidentsInput
  upsert?: Prisma.ServiceUpsertWithoutIncidentsInput
  connect?: Prisma.ServiceWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ServiceUpdateToOneWithWhereWithoutIncidentsInput, Prisma.ServiceUpdateWithoutIncidentsInput>, Prisma.ServiceUncheckedUpdateWithoutIncidentsInput>
}

export type ServiceCreateNestedManyWithoutCreatedByInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutCreatedByInput, Prisma.ServiceUncheckedCreateWithoutCreatedByInput> | Prisma.ServiceCreateWithoutCreatedByInput[] | Prisma.ServiceUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutCreatedByInput | Prisma.ServiceCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.ServiceCreateManyCreatedByInputEnvelope
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
}

export type ServiceCreateNestedManyWithoutUpdatedByInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutUpdatedByInput, Prisma.ServiceUncheckedCreateWithoutUpdatedByInput> | Prisma.ServiceCreateWithoutUpdatedByInput[] | Prisma.ServiceUncheckedCreateWithoutUpdatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutUpdatedByInput | Prisma.ServiceCreateOrConnectWithoutUpdatedByInput[]
  createMany?: Prisma.ServiceCreateManyUpdatedByInputEnvelope
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
}

export type ServiceUncheckedCreateNestedManyWithoutCreatedByInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutCreatedByInput, Prisma.ServiceUncheckedCreateWithoutCreatedByInput> | Prisma.ServiceCreateWithoutCreatedByInput[] | Prisma.ServiceUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutCreatedByInput | Prisma.ServiceCreateOrConnectWithoutCreatedByInput[]
  createMany?: Prisma.ServiceCreateManyCreatedByInputEnvelope
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
}

export type ServiceUncheckedCreateNestedManyWithoutUpdatedByInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutUpdatedByInput, Prisma.ServiceUncheckedCreateWithoutUpdatedByInput> | Prisma.ServiceCreateWithoutUpdatedByInput[] | Prisma.ServiceUncheckedCreateWithoutUpdatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutUpdatedByInput | Prisma.ServiceCreateOrConnectWithoutUpdatedByInput[]
  createMany?: Prisma.ServiceCreateManyUpdatedByInputEnvelope
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
}

export type ServiceUpdateManyWithoutCreatedByNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutCreatedByInput, Prisma.ServiceUncheckedCreateWithoutCreatedByInput> | Prisma.ServiceCreateWithoutCreatedByInput[] | Prisma.ServiceUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutCreatedByInput | Prisma.ServiceCreateOrConnectWithoutCreatedByInput[]
  upsert?: Prisma.ServiceUpsertWithWhereUniqueWithoutCreatedByInput | Prisma.ServiceUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.ServiceCreateManyCreatedByInputEnvelope
  set?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  disconnect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  delete?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  update?: Prisma.ServiceUpdateWithWhereUniqueWithoutCreatedByInput | Prisma.ServiceUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?: Prisma.ServiceUpdateManyWithWhereWithoutCreatedByInput | Prisma.ServiceUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.ServiceScalarWhereInput | Prisma.ServiceScalarWhereInput[]
}

export type ServiceUpdateManyWithoutUpdatedByNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutUpdatedByInput, Prisma.ServiceUncheckedCreateWithoutUpdatedByInput> | Prisma.ServiceCreateWithoutUpdatedByInput[] | Prisma.ServiceUncheckedCreateWithoutUpdatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutUpdatedByInput | Prisma.ServiceCreateOrConnectWithoutUpdatedByInput[]
  upsert?: Prisma.ServiceUpsertWithWhereUniqueWithoutUpdatedByInput | Prisma.ServiceUpsertWithWhereUniqueWithoutUpdatedByInput[]
  createMany?: Prisma.ServiceCreateManyUpdatedByInputEnvelope
  set?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  disconnect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  delete?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  update?: Prisma.ServiceUpdateWithWhereUniqueWithoutUpdatedByInput | Prisma.ServiceUpdateWithWhereUniqueWithoutUpdatedByInput[]
  updateMany?: Prisma.ServiceUpdateManyWithWhereWithoutUpdatedByInput | Prisma.ServiceUpdateManyWithWhereWithoutUpdatedByInput[]
  deleteMany?: Prisma.ServiceScalarWhereInput | Prisma.ServiceScalarWhereInput[]
}

export type ServiceUncheckedUpdateManyWithoutCreatedByNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutCreatedByInput, Prisma.ServiceUncheckedCreateWithoutCreatedByInput> | Prisma.ServiceCreateWithoutCreatedByInput[] | Prisma.ServiceUncheckedCreateWithoutCreatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutCreatedByInput | Prisma.ServiceCreateOrConnectWithoutCreatedByInput[]
  upsert?: Prisma.ServiceUpsertWithWhereUniqueWithoutCreatedByInput | Prisma.ServiceUpsertWithWhereUniqueWithoutCreatedByInput[]
  createMany?: Prisma.ServiceCreateManyCreatedByInputEnvelope
  set?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  disconnect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  delete?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  update?: Prisma.ServiceUpdateWithWhereUniqueWithoutCreatedByInput | Prisma.ServiceUpdateWithWhereUniqueWithoutCreatedByInput[]
  updateMany?: Prisma.ServiceUpdateManyWithWhereWithoutCreatedByInput | Prisma.ServiceUpdateManyWithWhereWithoutCreatedByInput[]
  deleteMany?: Prisma.ServiceScalarWhereInput | Prisma.ServiceScalarWhereInput[]
}

export type ServiceUncheckedUpdateManyWithoutUpdatedByNestedInput = {
  create?: Prisma.XOR<Prisma.ServiceCreateWithoutUpdatedByInput, Prisma.ServiceUncheckedCreateWithoutUpdatedByInput> | Prisma.ServiceCreateWithoutUpdatedByInput[] | Prisma.ServiceUncheckedCreateWithoutUpdatedByInput[]
  connectOrCreate?: Prisma.ServiceCreateOrConnectWithoutUpdatedByInput | Prisma.ServiceCreateOrConnectWithoutUpdatedByInput[]
  upsert?: Prisma.ServiceUpsertWithWhereUniqueWithoutUpdatedByInput | Prisma.ServiceUpsertWithWhereUniqueWithoutUpdatedByInput[]
  createMany?: Prisma.ServiceCreateManyUpdatedByInputEnvelope
  set?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  disconnect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  delete?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  connect?: Prisma.ServiceWhereUniqueInput | Prisma.ServiceWhereUniqueInput[]
  update?: Prisma.ServiceUpdateWithWhereUniqueWithoutUpdatedByInput | Prisma.ServiceUpdateWithWhereUniqueWithoutUpdatedByInput[]
  updateMany?: Prisma.ServiceUpdateManyWithWhereWithoutUpdatedByInput | Prisma.ServiceUpdateManyWithWhereWithoutUpdatedByInput[]
  deleteMany?: Prisma.ServiceScalarWhereInput | Prisma.ServiceScalarWhereInput[]
}

export type ServiceCreateWithoutRoutesInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  customFields?: Prisma.ServiceCustomFieldCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertCreateNestedManyWithoutServiceInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedServicesInput
  updatedBy: Prisma.UserCreateNestedOneWithoutUpdatedServicesInput
}

export type ServiceUncheckedCreateWithoutRoutesInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  updatedById: string
  customFields?: Prisma.ServiceCustomFieldUncheckedCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentUncheckedCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeUncheckedCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceCreateOrConnectWithoutRoutesInput = {
  where: Prisma.ServiceWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceCreateWithoutRoutesInput, Prisma.ServiceUncheckedCreateWithoutRoutesInput>
}

export type ServiceUpsertWithoutRoutesInput = {
  update: Prisma.XOR<Prisma.ServiceUpdateWithoutRoutesInput, Prisma.ServiceUncheckedUpdateWithoutRoutesInput>
  create: Prisma.XOR<Prisma.ServiceCreateWithoutRoutesInput, Prisma.ServiceUncheckedCreateWithoutRoutesInput>
  where?: Prisma.ServiceWhereInput
}

export type ServiceUpdateToOneWithWhereWithoutRoutesInput = {
  where?: Prisma.ServiceWhereInput
  data: Prisma.XOR<Prisma.ServiceUpdateWithoutRoutesInput, Prisma.ServiceUncheckedUpdateWithoutRoutesInput>
}

export type ServiceUpdateWithoutRoutesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  customFields?: Prisma.ServiceCustomFieldUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUpdateManyWithoutServiceNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedServicesNestedInput
  updatedBy?: Prisma.UserUpdateOneRequiredWithoutUpdatedServicesNestedInput
}

export type ServiceUncheckedUpdateWithoutRoutesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
  customFields?: Prisma.ServiceCustomFieldUncheckedUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUncheckedUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUncheckedUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceCreateWithoutCustomFieldsInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  routes?: Prisma.ServiceRouteCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertCreateNestedManyWithoutServiceInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedServicesInput
  updatedBy: Prisma.UserCreateNestedOneWithoutUpdatedServicesInput
}

export type ServiceUncheckedCreateWithoutCustomFieldsInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  updatedById: string
  routes?: Prisma.ServiceRouteUncheckedCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentUncheckedCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeUncheckedCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceCreateOrConnectWithoutCustomFieldsInput = {
  where: Prisma.ServiceWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceCreateWithoutCustomFieldsInput, Prisma.ServiceUncheckedCreateWithoutCustomFieldsInput>
}

export type ServiceUpsertWithoutCustomFieldsInput = {
  update: Prisma.XOR<Prisma.ServiceUpdateWithoutCustomFieldsInput, Prisma.ServiceUncheckedUpdateWithoutCustomFieldsInput>
  create: Prisma.XOR<Prisma.ServiceCreateWithoutCustomFieldsInput, Prisma.ServiceUncheckedCreateWithoutCustomFieldsInput>
  where?: Prisma.ServiceWhereInput
}

export type ServiceUpdateToOneWithWhereWithoutCustomFieldsInput = {
  where?: Prisma.ServiceWhereInput
  data: Prisma.XOR<Prisma.ServiceUpdateWithoutCustomFieldsInput, Prisma.ServiceUncheckedUpdateWithoutCustomFieldsInput>
}

export type ServiceUpdateWithoutCustomFieldsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  routes?: Prisma.ServiceRouteUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUpdateManyWithoutServiceNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedServicesNestedInput
  updatedBy?: Prisma.UserUpdateOneRequiredWithoutUpdatedServicesNestedInput
}

export type ServiceUncheckedUpdateWithoutCustomFieldsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
  routes?: Prisma.ServiceRouteUncheckedUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUncheckedUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUncheckedUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceCreateWithoutIncidentTypesInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  routes?: Prisma.ServiceRouteCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertCreateNestedManyWithoutServiceInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedServicesInput
  updatedBy: Prisma.UserCreateNestedOneWithoutUpdatedServicesInput
}

export type ServiceUncheckedCreateWithoutIncidentTypesInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  updatedById: string
  routes?: Prisma.ServiceRouteUncheckedCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldUncheckedCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentUncheckedCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceCreateOrConnectWithoutIncidentTypesInput = {
  where: Prisma.ServiceWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentTypesInput, Prisma.ServiceUncheckedCreateWithoutIncidentTypesInput>
}

export type ServiceUpsertWithoutIncidentTypesInput = {
  update: Prisma.XOR<Prisma.ServiceUpdateWithoutIncidentTypesInput, Prisma.ServiceUncheckedUpdateWithoutIncidentTypesInput>
  create: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentTypesInput, Prisma.ServiceUncheckedCreateWithoutIncidentTypesInput>
  where?: Prisma.ServiceWhereInput
}

export type ServiceUpdateToOneWithWhereWithoutIncidentTypesInput = {
  where?: Prisma.ServiceWhereInput
  data: Prisma.XOR<Prisma.ServiceUpdateWithoutIncidentTypesInput, Prisma.ServiceUncheckedUpdateWithoutIncidentTypesInput>
}

export type ServiceUpdateWithoutIncidentTypesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  routes?: Prisma.ServiceRouteUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUpdateManyWithoutServiceNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedServicesNestedInput
  updatedBy?: Prisma.UserUpdateOneRequiredWithoutUpdatedServicesNestedInput
}

export type ServiceUncheckedUpdateWithoutIncidentTypesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
  routes?: Prisma.ServiceRouteUncheckedUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUncheckedUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUncheckedUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceCreateWithoutAlertsInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  routes?: Prisma.ServiceRouteCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeCreateNestedManyWithoutServiceInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedServicesInput
  updatedBy: Prisma.UserCreateNestedOneWithoutUpdatedServicesInput
}

export type ServiceUncheckedCreateWithoutAlertsInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  updatedById: string
  routes?: Prisma.ServiceRouteUncheckedCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldUncheckedCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentUncheckedCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceCreateOrConnectWithoutAlertsInput = {
  where: Prisma.ServiceWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceCreateWithoutAlertsInput, Prisma.ServiceUncheckedCreateWithoutAlertsInput>
}

export type ServiceUpsertWithoutAlertsInput = {
  update: Prisma.XOR<Prisma.ServiceUpdateWithoutAlertsInput, Prisma.ServiceUncheckedUpdateWithoutAlertsInput>
  create: Prisma.XOR<Prisma.ServiceCreateWithoutAlertsInput, Prisma.ServiceUncheckedCreateWithoutAlertsInput>
  where?: Prisma.ServiceWhereInput
}

export type ServiceUpdateToOneWithWhereWithoutAlertsInput = {
  where?: Prisma.ServiceWhereInput
  data: Prisma.XOR<Prisma.ServiceUpdateWithoutAlertsInput, Prisma.ServiceUncheckedUpdateWithoutAlertsInput>
}

export type ServiceUpdateWithoutAlertsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  routes?: Prisma.ServiceRouteUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUpdateManyWithoutServiceNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedServicesNestedInput
  updatedBy?: Prisma.UserUpdateOneRequiredWithoutUpdatedServicesNestedInput
}

export type ServiceUncheckedUpdateWithoutAlertsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
  routes?: Prisma.ServiceRouteUncheckedUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUncheckedUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUncheckedUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceCreateWithoutIncidentsInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  routes?: Prisma.ServiceRouteCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertCreateNestedManyWithoutServiceInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedServicesInput
  updatedBy: Prisma.UserCreateNestedOneWithoutUpdatedServicesInput
}

export type ServiceUncheckedCreateWithoutIncidentsInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  updatedById: string
  routes?: Prisma.ServiceRouteUncheckedCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldUncheckedCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeUncheckedCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceCreateOrConnectWithoutIncidentsInput = {
  where: Prisma.ServiceWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentsInput, Prisma.ServiceUncheckedCreateWithoutIncidentsInput>
}

export type ServiceUpsertWithoutIncidentsInput = {
  update: Prisma.XOR<Prisma.ServiceUpdateWithoutIncidentsInput, Prisma.ServiceUncheckedUpdateWithoutIncidentsInput>
  create: Prisma.XOR<Prisma.ServiceCreateWithoutIncidentsInput, Prisma.ServiceUncheckedCreateWithoutIncidentsInput>
  where?: Prisma.ServiceWhereInput
}

export type ServiceUpdateToOneWithWhereWithoutIncidentsInput = {
  where?: Prisma.ServiceWhereInput
  data: Prisma.XOR<Prisma.ServiceUpdateWithoutIncidentsInput, Prisma.ServiceUncheckedUpdateWithoutIncidentsInput>
}

export type ServiceUpdateWithoutIncidentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  routes?: Prisma.ServiceRouteUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUpdateManyWithoutServiceNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedServicesNestedInput
  updatedBy?: Prisma.UserUpdateOneRequiredWithoutUpdatedServicesNestedInput
}

export type ServiceUncheckedUpdateWithoutIncidentsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
  routes?: Prisma.ServiceRouteUncheckedUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUncheckedUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUncheckedUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceCreateWithoutCreatedByInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  routes?: Prisma.ServiceRouteCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertCreateNestedManyWithoutServiceInput
  updatedBy: Prisma.UserCreateNestedOneWithoutUpdatedServicesInput
}

export type ServiceUncheckedCreateWithoutCreatedByInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  updatedById: string
  routes?: Prisma.ServiceRouteUncheckedCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldUncheckedCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentUncheckedCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeUncheckedCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceCreateOrConnectWithoutCreatedByInput = {
  where: Prisma.ServiceWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceCreateWithoutCreatedByInput, Prisma.ServiceUncheckedCreateWithoutCreatedByInput>
}

export type ServiceCreateManyCreatedByInputEnvelope = {
  data: Prisma.ServiceCreateManyCreatedByInput | Prisma.ServiceCreateManyCreatedByInput[]
  skipDuplicates?: boolean
}

export type ServiceCreateWithoutUpdatedByInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  routes?: Prisma.ServiceRouteCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertCreateNestedManyWithoutServiceInput
  createdBy: Prisma.UserCreateNestedOneWithoutCreatedServicesInput
}

export type ServiceUncheckedCreateWithoutUpdatedByInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
  routes?: Prisma.ServiceRouteUncheckedCreateNestedManyWithoutServiceInput
  customFields?: Prisma.ServiceCustomFieldUncheckedCreateNestedManyWithoutServiceInput
  incidents?: Prisma.IncidentUncheckedCreateNestedManyWithoutServiceInput
  incidentTypes?: Prisma.IncidentTypeUncheckedCreateNestedManyWithoutServiceInput
  alerts?: Prisma.AlertUncheckedCreateNestedManyWithoutServiceInput
}

export type ServiceCreateOrConnectWithoutUpdatedByInput = {
  where: Prisma.ServiceWhereUniqueInput
  create: Prisma.XOR<Prisma.ServiceCreateWithoutUpdatedByInput, Prisma.ServiceUncheckedCreateWithoutUpdatedByInput>
}

export type ServiceCreateManyUpdatedByInputEnvelope = {
  data: Prisma.ServiceCreateManyUpdatedByInput | Prisma.ServiceCreateManyUpdatedByInput[]
  skipDuplicates?: boolean
}

export type ServiceUpsertWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.ServiceWhereUniqueInput
  update: Prisma.XOR<Prisma.ServiceUpdateWithoutCreatedByInput, Prisma.ServiceUncheckedUpdateWithoutCreatedByInput>
  create: Prisma.XOR<Prisma.ServiceCreateWithoutCreatedByInput, Prisma.ServiceUncheckedCreateWithoutCreatedByInput>
}

export type ServiceUpdateWithWhereUniqueWithoutCreatedByInput = {
  where: Prisma.ServiceWhereUniqueInput
  data: Prisma.XOR<Prisma.ServiceUpdateWithoutCreatedByInput, Prisma.ServiceUncheckedUpdateWithoutCreatedByInput>
}

export type ServiceUpdateManyWithWhereWithoutCreatedByInput = {
  where: Prisma.ServiceScalarWhereInput
  data: Prisma.XOR<Prisma.ServiceUpdateManyMutationInput, Prisma.ServiceUncheckedUpdateManyWithoutCreatedByInput>
}

export type ServiceScalarWhereInput = {
  AND?: Prisma.ServiceScalarWhereInput | Prisma.ServiceScalarWhereInput[]
  OR?: Prisma.ServiceScalarWhereInput[]
  NOT?: Prisma.ServiceScalarWhereInput | Prisma.ServiceScalarWhereInput[]
  id?: Prisma.StringFilter<"Service"> | string
  name?: Prisma.StringFilter<"Service"> | string
  description?: Prisma.StringNullableFilter<"Service"> | string | null
  createdAt?: Prisma.DateTimeFilter<"Service"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Service"> | Date | string
  createdById?: Prisma.StringFilter<"Service"> | string
  updatedById?: Prisma.StringFilter<"Service"> | string
}

export type ServiceUpsertWithWhereUniqueWithoutUpdatedByInput = {
  where: Prisma.ServiceWhereUniqueInput
  update: Prisma.XOR<Prisma.ServiceUpdateWithoutUpdatedByInput, Prisma.ServiceUncheckedUpdateWithoutUpdatedByInput>
  create: Prisma.XOR<Prisma.ServiceCreateWithoutUpdatedByInput, Prisma.ServiceUncheckedCreateWithoutUpdatedByInput>
}

export type ServiceUpdateWithWhereUniqueWithoutUpdatedByInput = {
  where: Prisma.ServiceWhereUniqueInput
  data: Prisma.XOR<Prisma.ServiceUpdateWithoutUpdatedByInput, Prisma.ServiceUncheckedUpdateWithoutUpdatedByInput>
}

export type ServiceUpdateManyWithWhereWithoutUpdatedByInput = {
  where: Prisma.ServiceScalarWhereInput
  data: Prisma.XOR<Prisma.ServiceUpdateManyMutationInput, Prisma.ServiceUncheckedUpdateManyWithoutUpdatedByInput>
}

export type ServiceCreateManyCreatedByInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  updatedById: string
}

export type ServiceCreateManyUpdatedByInput = {
  id?: string
  name: string
  description?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  createdById: string
}

export type ServiceUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  routes?: Prisma.ServiceRouteUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUpdateManyWithoutServiceNestedInput
  updatedBy?: Prisma.UserUpdateOneRequiredWithoutUpdatedServicesNestedInput
}

export type ServiceUncheckedUpdateWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
  routes?: Prisma.ServiceRouteUncheckedUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUncheckedUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUncheckedUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUncheckedUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceUncheckedUpdateManyWithoutCreatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedById?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ServiceUpdateWithoutUpdatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  routes?: Prisma.ServiceRouteUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUpdateManyWithoutServiceNestedInput
  createdBy?: Prisma.UserUpdateOneRequiredWithoutCreatedServicesNestedInput
}

export type ServiceUncheckedUpdateWithoutUpdatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
  routes?: Prisma.ServiceRouteUncheckedUpdateManyWithoutServiceNestedInput
  customFields?: Prisma.ServiceCustomFieldUncheckedUpdateManyWithoutServiceNestedInput
  incidents?: Prisma.IncidentUncheckedUpdateManyWithoutServiceNestedInput
  incidentTypes?: Prisma.IncidentTypeUncheckedUpdateManyWithoutServiceNestedInput
  alerts?: Prisma.AlertUncheckedUpdateManyWithoutServiceNestedInput
}

export type ServiceUncheckedUpdateManyWithoutUpdatedByInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdById?: Prisma.StringFieldUpdateOperationsInput | string
}


/**
 * Count Type ServiceCountOutputType
 */

export type ServiceCountOutputType = {
  routes: number
  customFields: number
  incidents: number
  incidentTypes: number
  alerts: number
}

export type ServiceCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  routes?: boolean | ServiceCountOutputTypeCountRoutesArgs
  customFields?: boolean | ServiceCountOutputTypeCountCustomFieldsArgs
  incidents?: boolean | ServiceCountOutputTypeCountIncidentsArgs
  incidentTypes?: boolean | ServiceCountOutputTypeCountIncidentTypesArgs
  alerts?: boolean | ServiceCountOutputTypeCountAlertsArgs
}

/**
 * ServiceCountOutputType without action
 */
export type ServiceCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceCountOutputType
   */
  select?: Prisma.ServiceCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ServiceCountOutputType without action
 */
export type ServiceCountOutputTypeCountRoutesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ServiceRouteWhereInput
}

/**
 * ServiceCountOutputType without action
 */
export type ServiceCountOutputTypeCountCustomFieldsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ServiceCustomFieldWhereInput
}

/**
 * ServiceCountOutputType without action
 */
export type ServiceCountOutputTypeCountIncidentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.IncidentWhereInput
}

/**
 * ServiceCountOutputType without action
 */
export type ServiceCountOutputTypeCountIncidentTypesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.IncidentTypeWhereInput
}

/**
 * ServiceCountOutputType without action
 */
export type ServiceCountOutputTypeCountAlertsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AlertWhereInput
}


export type ServiceSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  createdById?: boolean
  updatedById?: boolean
  routes?: boolean | Prisma.Service$routesArgs<ExtArgs>
  customFields?: boolean | Prisma.Service$customFieldsArgs<ExtArgs>
  incidents?: boolean | Prisma.Service$incidentsArgs<ExtArgs>
  incidentTypes?: boolean | Prisma.Service$incidentTypesArgs<ExtArgs>
  alerts?: boolean | Prisma.Service$alertsArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  updatedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.ServiceCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["service"]>

export type ServiceSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  createdById?: boolean
  updatedById?: boolean
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  updatedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["service"]>

export type ServiceSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  createdById?: boolean
  updatedById?: boolean
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  updatedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["service"]>

export type ServiceSelectScalar = {
  id?: boolean
  name?: boolean
  description?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  createdById?: boolean
  updatedById?: boolean
}

export type ServiceOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "description" | "createdAt" | "updatedAt" | "createdById" | "updatedById", ExtArgs["result"]["service"]>
export type ServiceInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  routes?: boolean | Prisma.Service$routesArgs<ExtArgs>
  customFields?: boolean | Prisma.Service$customFieldsArgs<ExtArgs>
  incidents?: boolean | Prisma.Service$incidentsArgs<ExtArgs>
  incidentTypes?: boolean | Prisma.Service$incidentTypesArgs<ExtArgs>
  alerts?: boolean | Prisma.Service$alertsArgs<ExtArgs>
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  updatedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.ServiceCountOutputTypeDefaultArgs<ExtArgs>
}
export type ServiceIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  updatedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type ServiceIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  createdBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  updatedBy?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $ServicePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Service"
  objects: {
    routes: Prisma.$ServiceRoutePayload<ExtArgs>[]
    customFields: Prisma.$ServiceCustomFieldPayload<ExtArgs>[]
    incidents: Prisma.$IncidentPayload<ExtArgs>[]
    incidentTypes: Prisma.$IncidentTypePayload<ExtArgs>[]
    alerts: Prisma.$AlertPayload<ExtArgs>[]
    createdBy: Prisma.$UserPayload<ExtArgs>
    updatedBy: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    description: string | null
    createdAt: Date
    updatedAt: Date
    createdById: string
    updatedById: string
  }, ExtArgs["result"]["service"]>
  composites: {}
}

export type ServiceGetPayload<S extends boolean | null | undefined | ServiceDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ServicePayload, S>

export type ServiceCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ServiceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ServiceCountAggregateInputType | true
  }

export interface ServiceDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Service'], meta: { name: 'Service' } }
  /**
   * Find zero or one Service that matches the filter.
   * @param {ServiceFindUniqueArgs} args - Arguments to find a Service
   * @example
   * // Get one Service
   * const service = await prisma.service.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ServiceFindUniqueArgs>(args: Prisma.SelectSubset<T, ServiceFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Service that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ServiceFindUniqueOrThrowArgs} args - Arguments to find a Service
   * @example
   * // Get one Service
   * const service = await prisma.service.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ServiceFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ServiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Service that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceFindFirstArgs} args - Arguments to find a Service
   * @example
   * // Get one Service
   * const service = await prisma.service.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ServiceFindFirstArgs>(args?: Prisma.SelectSubset<T, ServiceFindFirstArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Service that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceFindFirstOrThrowArgs} args - Arguments to find a Service
   * @example
   * // Get one Service
   * const service = await prisma.service.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ServiceFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ServiceFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Services that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Services
   * const services = await prisma.service.findMany()
   * 
   * // Get first 10 Services
   * const services = await prisma.service.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const serviceWithIdOnly = await prisma.service.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ServiceFindManyArgs>(args?: Prisma.SelectSubset<T, ServiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Service.
   * @param {ServiceCreateArgs} args - Arguments to create a Service.
   * @example
   * // Create one Service
   * const Service = await prisma.service.create({
   *   data: {
   *     // ... data to create a Service
   *   }
   * })
   * 
   */
  create<T extends ServiceCreateArgs>(args: Prisma.SelectSubset<T, ServiceCreateArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Services.
   * @param {ServiceCreateManyArgs} args - Arguments to create many Services.
   * @example
   * // Create many Services
   * const service = await prisma.service.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ServiceCreateManyArgs>(args?: Prisma.SelectSubset<T, ServiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Services and returns the data saved in the database.
   * @param {ServiceCreateManyAndReturnArgs} args - Arguments to create many Services.
   * @example
   * // Create many Services
   * const service = await prisma.service.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Services and only return the `id`
   * const serviceWithIdOnly = await prisma.service.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ServiceCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ServiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Service.
   * @param {ServiceDeleteArgs} args - Arguments to delete one Service.
   * @example
   * // Delete one Service
   * const Service = await prisma.service.delete({
   *   where: {
   *     // ... filter to delete one Service
   *   }
   * })
   * 
   */
  delete<T extends ServiceDeleteArgs>(args: Prisma.SelectSubset<T, ServiceDeleteArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Service.
   * @param {ServiceUpdateArgs} args - Arguments to update one Service.
   * @example
   * // Update one Service
   * const service = await prisma.service.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ServiceUpdateArgs>(args: Prisma.SelectSubset<T, ServiceUpdateArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Services.
   * @param {ServiceDeleteManyArgs} args - Arguments to filter Services to delete.
   * @example
   * // Delete a few Services
   * const { count } = await prisma.service.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ServiceDeleteManyArgs>(args?: Prisma.SelectSubset<T, ServiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Services.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Services
   * const service = await prisma.service.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ServiceUpdateManyArgs>(args: Prisma.SelectSubset<T, ServiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Services and returns the data updated in the database.
   * @param {ServiceUpdateManyAndReturnArgs} args - Arguments to update many Services.
   * @example
   * // Update many Services
   * const service = await prisma.service.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Services and only return the `id`
   * const serviceWithIdOnly = await prisma.service.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ServiceUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ServiceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Service.
   * @param {ServiceUpsertArgs} args - Arguments to update or create a Service.
   * @example
   * // Update or create a Service
   * const service = await prisma.service.upsert({
   *   create: {
   *     // ... data to create a Service
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Service we want to update
   *   }
   * })
   */
  upsert<T extends ServiceUpsertArgs>(args: Prisma.SelectSubset<T, ServiceUpsertArgs<ExtArgs>>): Prisma.Prisma__ServiceClient<runtime.Types.Result.GetResult<Prisma.$ServicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Services.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceCountArgs} args - Arguments to filter Services to count.
   * @example
   * // Count the number of Services
   * const count = await prisma.service.count({
   *   where: {
   *     // ... the filter for the Services we want to count
   *   }
   * })
  **/
  count<T extends ServiceCountArgs>(
    args?: Prisma.Subset<T, ServiceCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ServiceCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Service.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ServiceAggregateArgs>(args: Prisma.Subset<T, ServiceAggregateArgs>): Prisma.PrismaPromise<GetServiceAggregateType<T>>

  /**
   * Group by Service.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ServiceGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ServiceGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ServiceGroupByArgs['orderBy'] }
      : { orderBy?: ServiceGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ServiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Service model
 */
readonly fields: ServiceFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Service.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ServiceClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  routes<T extends Prisma.Service$routesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Service$routesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServiceRoutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  customFields<T extends Prisma.Service$customFieldsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Service$customFieldsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ServiceCustomFieldPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  incidents<T extends Prisma.Service$incidentsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Service$incidentsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$IncidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  incidentTypes<T extends Prisma.Service$incidentTypesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Service$incidentTypesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$IncidentTypePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  alerts<T extends Prisma.Service$alertsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Service$alertsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AlertPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  createdBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  updatedBy<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Service model
 */
export interface ServiceFieldRefs {
  readonly id: Prisma.FieldRef<"Service", 'String'>
  readonly name: Prisma.FieldRef<"Service", 'String'>
  readonly description: Prisma.FieldRef<"Service", 'String'>
  readonly createdAt: Prisma.FieldRef<"Service", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Service", 'DateTime'>
  readonly createdById: Prisma.FieldRef<"Service", 'String'>
  readonly updatedById: Prisma.FieldRef<"Service", 'String'>
}
    

// Custom InputTypes
/**
 * Service findUnique
 */
export type ServiceFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * Filter, which Service to fetch.
   */
  where: Prisma.ServiceWhereUniqueInput
}

/**
 * Service findUniqueOrThrow
 */
export type ServiceFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * Filter, which Service to fetch.
   */
  where: Prisma.ServiceWhereUniqueInput
}

/**
 * Service findFirst
 */
export type ServiceFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * Filter, which Service to fetch.
   */
  where?: Prisma.ServiceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Services to fetch.
   */
  orderBy?: Prisma.ServiceOrderByWithRelationInput | Prisma.ServiceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Services.
   */
  cursor?: Prisma.ServiceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Services from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Services.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Services.
   */
  distinct?: Prisma.ServiceScalarFieldEnum | Prisma.ServiceScalarFieldEnum[]
}

/**
 * Service findFirstOrThrow
 */
export type ServiceFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * Filter, which Service to fetch.
   */
  where?: Prisma.ServiceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Services to fetch.
   */
  orderBy?: Prisma.ServiceOrderByWithRelationInput | Prisma.ServiceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Services.
   */
  cursor?: Prisma.ServiceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Services from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Services.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Services.
   */
  distinct?: Prisma.ServiceScalarFieldEnum | Prisma.ServiceScalarFieldEnum[]
}

/**
 * Service findMany
 */
export type ServiceFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * Filter, which Services to fetch.
   */
  where?: Prisma.ServiceWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Services to fetch.
   */
  orderBy?: Prisma.ServiceOrderByWithRelationInput | Prisma.ServiceOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Services.
   */
  cursor?: Prisma.ServiceWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Services from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Services.
   */
  skip?: number
  distinct?: Prisma.ServiceScalarFieldEnum | Prisma.ServiceScalarFieldEnum[]
}

/**
 * Service create
 */
export type ServiceCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * The data needed to create a Service.
   */
  data: Prisma.XOR<Prisma.ServiceCreateInput, Prisma.ServiceUncheckedCreateInput>
}

/**
 * Service createMany
 */
export type ServiceCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Services.
   */
  data: Prisma.ServiceCreateManyInput | Prisma.ServiceCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Service createManyAndReturn
 */
export type ServiceCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * The data used to create many Services.
   */
  data: Prisma.ServiceCreateManyInput | Prisma.ServiceCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Service update
 */
export type ServiceUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * The data needed to update a Service.
   */
  data: Prisma.XOR<Prisma.ServiceUpdateInput, Prisma.ServiceUncheckedUpdateInput>
  /**
   * Choose, which Service to update.
   */
  where: Prisma.ServiceWhereUniqueInput
}

/**
 * Service updateMany
 */
export type ServiceUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Services.
   */
  data: Prisma.XOR<Prisma.ServiceUpdateManyMutationInput, Prisma.ServiceUncheckedUpdateManyInput>
  /**
   * Filter which Services to update
   */
  where?: Prisma.ServiceWhereInput
  /**
   * Limit how many Services to update.
   */
  limit?: number
}

/**
 * Service updateManyAndReturn
 */
export type ServiceUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * The data used to update Services.
   */
  data: Prisma.XOR<Prisma.ServiceUpdateManyMutationInput, Prisma.ServiceUncheckedUpdateManyInput>
  /**
   * Filter which Services to update
   */
  where?: Prisma.ServiceWhereInput
  /**
   * Limit how many Services to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Service upsert
 */
export type ServiceUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * The filter to search for the Service to update in case it exists.
   */
  where: Prisma.ServiceWhereUniqueInput
  /**
   * In case the Service found by the `where` argument doesn't exist, create a new Service with this data.
   */
  create: Prisma.XOR<Prisma.ServiceCreateInput, Prisma.ServiceUncheckedCreateInput>
  /**
   * In case the Service was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ServiceUpdateInput, Prisma.ServiceUncheckedUpdateInput>
}

/**
 * Service delete
 */
export type ServiceDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
  /**
   * Filter which Service to delete.
   */
  where: Prisma.ServiceWhereUniqueInput
}

/**
 * Service deleteMany
 */
export type ServiceDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Services to delete
   */
  where?: Prisma.ServiceWhereInput
  /**
   * Limit how many Services to delete.
   */
  limit?: number
}

/**
 * Service.routes
 */
export type Service$routesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceRoute
   */
  select?: Prisma.ServiceRouteSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceRoute
   */
  omit?: Prisma.ServiceRouteOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceRouteInclude<ExtArgs> | null
  where?: Prisma.ServiceRouteWhereInput
  orderBy?: Prisma.ServiceRouteOrderByWithRelationInput | Prisma.ServiceRouteOrderByWithRelationInput[]
  cursor?: Prisma.ServiceRouteWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ServiceRouteScalarFieldEnum | Prisma.ServiceRouteScalarFieldEnum[]
}

/**
 * Service.customFields
 */
export type Service$customFieldsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ServiceCustomField
   */
  select?: Prisma.ServiceCustomFieldSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ServiceCustomField
   */
  omit?: Prisma.ServiceCustomFieldOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceCustomFieldInclude<ExtArgs> | null
  where?: Prisma.ServiceCustomFieldWhereInput
  orderBy?: Prisma.ServiceCustomFieldOrderByWithRelationInput | Prisma.ServiceCustomFieldOrderByWithRelationInput[]
  cursor?: Prisma.ServiceCustomFieldWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ServiceCustomFieldScalarFieldEnum | Prisma.ServiceCustomFieldScalarFieldEnum[]
}

/**
 * Service.incidents
 */
export type Service$incidentsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Incident
   */
  select?: Prisma.IncidentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Incident
   */
  omit?: Prisma.IncidentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.IncidentInclude<ExtArgs> | null
  where?: Prisma.IncidentWhereInput
  orderBy?: Prisma.IncidentOrderByWithRelationInput | Prisma.IncidentOrderByWithRelationInput[]
  cursor?: Prisma.IncidentWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.IncidentScalarFieldEnum | Prisma.IncidentScalarFieldEnum[]
}

/**
 * Service.incidentTypes
 */
export type Service$incidentTypesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the IncidentType
   */
  select?: Prisma.IncidentTypeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the IncidentType
   */
  omit?: Prisma.IncidentTypeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.IncidentTypeInclude<ExtArgs> | null
  where?: Prisma.IncidentTypeWhereInput
  orderBy?: Prisma.IncidentTypeOrderByWithRelationInput | Prisma.IncidentTypeOrderByWithRelationInput[]
  cursor?: Prisma.IncidentTypeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.IncidentTypeScalarFieldEnum | Prisma.IncidentTypeScalarFieldEnum[]
}

/**
 * Service.alerts
 */
export type Service$alertsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Alert
   */
  select?: Prisma.AlertSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Alert
   */
  omit?: Prisma.AlertOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AlertInclude<ExtArgs> | null
  where?: Prisma.AlertWhereInput
  orderBy?: Prisma.AlertOrderByWithRelationInput | Prisma.AlertOrderByWithRelationInput[]
  cursor?: Prisma.AlertWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AlertScalarFieldEnum | Prisma.AlertScalarFieldEnum[]
}

/**
 * Service without action
 */
export type ServiceDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Service
   */
  select?: Prisma.ServiceSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Service
   */
  omit?: Prisma.ServiceOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ServiceInclude<ExtArgs> | null
}
