/* tslint:disable */
/* eslint-disable */
/**
 * Elysia Documentation - version 0.0.0
 *
 * Development documentation
 *
 * OpenAPI version: 3.0.3
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

declare global {
  interface Apis {
    general: {
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/service/
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   page: number
       *   // [required]
       *   pageSize: number
       *   sortFields?: string
       *   sortOrders?: string
       *   idValue?: string
       *   nameValue?: string
       *   descriptionValue?: string
       *   startTime?: string
       *   endTime?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getApiService<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * [required]
             */
            page: number;
            /**
             * [required]
             */
            pageSize: number;
            sortFields?: string;
            sortOrders?: string;
            idValue?: string;
            nameValue?: string;
            descriptionValue?: string;
            startTime?: string;
            endTime?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getApiService', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/service/
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   name: string
       *   description?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      postApiService<
        Config extends Alova2MethodConfig<unknown> & {
          data: {
            /**
             * [required]
             */
            name: string;
            description?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.postApiService', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/service/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getApiServiceById<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getApiServiceById', Config>;
      /**
       * ---
       *
       * [PATCH]
       *
       * **path:** /api/service/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   name: string
       *   description?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      patchApiServiceById<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
          data: {
            /**
             * [required]
             */
            name: string;
            description?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.patchApiServiceById', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/service-route/
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   page: number
       *   // [required]
       *   pageSize: number
       *   sortFields?: string
       *   sortOrders?: string
       *   serviceIdValue?: string
       *   conditionValue?: string
       *   startTime?: string
       *   endTime?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiserviceRoute<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * [required]
             */
            page: number;
            /**
             * [required]
             */
            pageSize: number;
            sortFields?: string;
            sortOrders?: string;
            serviceIdValue?: string;
            conditionValue?: string;
            startTime?: string;
            endTime?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiserviceRoute', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/service-route/
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   serviceId: string
       *   // [required]
       *   order: number
       *   condition?: string
       *   // [required]
       *   description: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      postapiserviceRoute<
        Config extends Alova2MethodConfig<unknown> & {
          data: {
            /**
             * [required]
             */
            serviceId: string;
            /**
             * [required]
             */
            order: number;
            condition?: string;
            /**
             * [required]
             */
            description: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.postapiserviceRoute', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/service-route/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiserviceRoutebyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiserviceRoutebyid', Config>;
      /**
       * ---
       *
       * [PATCH]
       *
       * **path:** /api/service-route/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   order?: number
       *   condition?: string
       *   description?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      patchapiserviceRoutebyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
          data: {
            order?: number;
            condition?: string;
            description?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.patchapiserviceRoutebyid', Config>;
      /**
       * ---
       *
       * [DELETE]
       *
       * **path:** /api/service-route/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      deleteapiserviceRoutebyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.deleteapiserviceRoutebyid', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/service-custom-fields/
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   page: number
       *   // [required]
       *   pageSize: number
       *   sortFields?: string
       *   sortOrders?: string
       *   serviceIdValue?: string
       *   nameValue?: string
       *   typeValue?: string
       *   requiredValue?: boolean
       *   startTime?: string
       *   endTime?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiserviceCustomFields<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * [required]
             */
            page: number;
            /**
             * [required]
             */
            pageSize: number;
            sortFields?: string;
            sortOrders?: string;
            serviceIdValue?: string;
            nameValue?: string;
            typeValue?: string;
            requiredValue?: boolean;
            startTime?: string;
            endTime?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiserviceCustomFields', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/service-custom-fields/
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   serviceId: string
       *   // [required]
       *   path: string
       *   // [required]
       *   type: string | string | string | string | string | string
       *   description?: string
       *   required?: boolean
       *   defaultValue?: string
       *   options?: string[]
       *   order?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      postapiserviceCustomFields<
        Config extends Alova2MethodConfig<unknown> & {
          data: {
            /**
             * [required]
             */
            serviceId: string;
            /**
             * [required]
             */
            path: string;
            /**
             * [required]
             */
            type: string | string | string | string | string | string;
            description?: string;
            required?: boolean;
            defaultValue?: string;
            options?: string[];
            order?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.postapiserviceCustomFields', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/service-custom-fields/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiserviceCustomFieldsbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiserviceCustomFieldsbyid', Config>;
      /**
       * ---
       *
       * [PATCH]
       *
       * **path:** /api/service-custom-fields/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   path?: string
       *   type?: string | string | string | string | string | string
       *   description?: string
       *   required?: boolean
       *   defaultValue?: string
       *   options?: string[]
       *   order?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      patchapiserviceCustomFieldsbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
          data: {
            path?: string;
            type?: string | string | string | string | string | string;
            description?: string;
            required?: boolean;
            defaultValue?: string;
            options?: string[];
            order?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.patchapiserviceCustomFieldsbyid', Config>;
      /**
       * ---
       *
       * [DELETE]
       *
       * **path:** /api/service-custom-fields/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      deleteapiserviceCustomFieldsbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.deleteapiserviceCustomFieldsbyid', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/incident/
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   page: number
       *   // [required]
       *   pageSize: number
       *   sortFields?: string
       *   sortOrders?: string
       *   titleValue?: string
       *   serviceValue?: string
       *   incidentIdValue?: string
       *   statusValue?: string
       *   assigneeValue?: string
       *   startTime?: string
       *   endTime?: string
       *   updatedAtStart?: string
       *   updatedAtEnd?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getApiIncident<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * [required]
             */
            page: number;
            /**
             * [required]
             */
            pageSize: number;
            sortFields?: string;
            sortOrders?: string;
            titleValue?: string;
            serviceValue?: string;
            incidentIdValue?: string;
            statusValue?: string;
            assigneeValue?: string;
            startTime?: string;
            endTime?: string;
            updatedAtStart?: string;
            updatedAtEnd?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getApiIncident', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/incident-types/
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   page: number
       *   // [required]
       *   pageSize: number
       *   sortFields?: string
       *   sortOrders?: string
       *   nameValue?: string
       *   priorityValue?: string
       *   isActiveValue?: boolean
       *   autoAssignValue?: boolean
       *   startTime?: string
       *   endTime?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiincidentTypes<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * [required]
             */
            page: number;
            /**
             * [required]
             */
            pageSize: number;
            sortFields?: string;
            sortOrders?: string;
            nameValue?: string;
            priorityValue?: string;
            isActiveValue?: boolean;
            autoAssignValue?: boolean;
            startTime?: string;
            endTime?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiincidentTypes', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/incident-types/
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   name: string
       *   description?: string
       *   // [required]
       *   priority: string | string | string | string
       *   color?: string
       *   icon?: string
       *   isActive?: boolean
       *   autoAssign?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      postapiincidentTypes<
        Config extends Alova2MethodConfig<unknown> & {
          data: {
            /**
             * [required]
             */
            name: string;
            description?: string;
            /**
             * [required]
             */
            priority: string | string | string | string;
            color?: string;
            icon?: string;
            isActive?: boolean;
            autoAssign?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.postapiincidentTypes', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/incident-types/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiincidentTypesbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiincidentTypesbyid', Config>;
      /**
       * ---
       *
       * [PATCH]
       *
       * **path:** /api/incident-types/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   name?: string
       *   description?: string
       *   priority?: string | string | string | string
       *   color?: string
       *   icon?: string
       *   isActive?: boolean
       *   autoAssign?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      patchapiincidentTypesbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: number;
          };
          data: {
            name?: string;
            description?: string;
            priority?: string | string | string | string;
            color?: string;
            icon?: string;
            isActive?: boolean;
            autoAssign?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.patchapiincidentTypesbyid', Config>;
      /**
       * ---
       *
       * [DELETE]
       *
       * **path:** /api/incident-types/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      deleteapiincidentTypesbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.deleteapiincidentTypesbyid', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/alert/
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   title: string
       *   // [required]
       *   content: string
       *   customFields?: null | unknown
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      postApiAlert<
        Config extends Alova2MethodConfig<unknown> & {
          data: {
            /**
             * [required]
             */
            title: string;
            /**
             * [required]
             */
            content: string;
            customFields?: null | unknown;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.postApiAlert', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/alert/
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   page: number
       *   // [required]
       *   pageSize: number
       *   sortFields?: string
       *   sortOrders?: string
       *   id?: string | number
       *   title?: string
       *   content?: string
       *   customFields?: null | unknown
       *   serviceId?: string
       *   incidentId?: null | (string | number)
       *   createdAt?: Date | string | string | number
       *   updatedAt?: Date | string | string | number
       *   createdById?: string
       *   startTime?: Date | string | string | number
       *   endTime?: Date | string | string | number
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   title: string
       *   // [required]
       *   content: string
       *   customFields?: null | unknown
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getApiAlert<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * [required]
             */
            page: number;
            /**
             * [required]
             */
            pageSize: number;
            sortFields?: string;
            sortOrders?: string;
            id?: string | number;
            title?: string;
            content?: string;
            customFields?: null | unknown;
            serviceId?: string;
            incidentId?: null | (string | number);
            createdAt?: Date | string | string | number;
            updatedAt?: Date | string | string | number;
            createdById?: string;
            startTime?: Date | string | string | number;
            endTime?: Date | string | string | number;
          };
          data: {
            /**
             * [required]
             */
            title: string;
            /**
             * [required]
             */
            content: string;
            customFields?: null | unknown;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getApiAlert', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/alert/{serviceId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   serviceId: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   title: string
       *   // [required]
       *   content: string
       *   customFields?: null | unknown
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      postApiAlertByServiceId<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            serviceId: string;
          };
          data: {
            /**
             * [required]
             */
            title: string;
            /**
             * [required]
             */
            content: string;
            customFields?: null | unknown;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.postApiAlertByServiceId', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/global-custom-fields/
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   page: number
       *   // [required]
       *   pageSize: number
       *   sortFields?: string
       *   sortOrders?: string
       *   id?: string | number
       *   path?: string
       *   type?: string | string | string | string | string | string
       *   required?: boolean
       *   enumValues?: null | unknown
       *   createdAt?: Date | string | string | number
       *   updatedAt?: Date | string | string | number
       *   createdById?: string
       *   updatedById?: string
       *   startTime?: Date | string | string | number
       *   endTime?: Date | string | string | number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiglobalCustomFields<
        Config extends Alova2MethodConfig<unknown> & {
          params: {
            /**
             * [required]
             */
            page: number;
            /**
             * [required]
             */
            pageSize: number;
            sortFields?: string;
            sortOrders?: string;
            id?: string | number;
            path?: string;
            type?: string | string | string | string | string | string;
            required?: boolean;
            enumValues?: null | unknown;
            createdAt?: Date | string | string | number;
            updatedAt?: Date | string | string | number;
            createdById?: string;
            updatedById?: string;
            startTime?: Date | string | string | number;
            endTime?: Date | string | string | number;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiglobalCustomFields', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/global-custom-fields/
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // [required]
       *   path: string
       *   // [required]
       *   type: string | string | string | string | string | string
       *   required?: boolean
       *   enumValues?: null | unknown
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      postapiglobalCustomFields<
        Config extends Alova2MethodConfig<unknown> & {
          data: {
            /**
             * [required]
             */
            path: string;
            /**
             * [required]
             */
            type: string | string | string | string | string | string;
            required?: boolean;
            enumValues?: null | unknown;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.postapiglobalCustomFields', Config>;
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api/global-custom-fields/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      getapiglobalCustomFieldsbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.getapiglobalCustomFieldsbyid', Config>;
      /**
       * ---
       *
       * [PATCH]
       *
       * **path:** /api/global-custom-fields/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   path?: string
       *   type?: string | string | string | string | string | string
       *   required?: boolean
       *   enumValues?: null | unknown
       *   createdBy?: {
       *     // [required]
       *     connect: {
       *       // [required]
       *       id: string
       *     }
       *   }
       *   updatedBy?: {
       *     // [required]
       *     connect: {
       *       // [required]
       *       id: string
       *     }
       *   }
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      patchapiglobalCustomFieldsbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: number;
          };
          data: {
            path?: string;
            type?: string | string | string | string | string | string;
            required?: boolean;
            enumValues?: null | unknown;
            createdBy?: {
              /**
               * [required]
               */
              connect: {
                /**
                 * [required]
                 */
                id: string;
              };
            };
            updatedBy?: {
              /**
               * [required]
               */
              connect: {
                /**
                 * [required]
                 */
                id: string;
              };
            };
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.patchapiglobalCustomFieldsbyid', Config>;
      /**
       * ---
       *
       * [DELETE]
       *
       * **path:** /api/global-custom-fields/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      deleteapiglobalCustomFieldsbyid<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'general.deleteapiglobalCustomFieldsbyid', Config>;
    };
  }

  var Apis: Apis;
}
